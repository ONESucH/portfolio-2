define(["../core","../var/document"],function(e,n){"use strict";function t(){n.removeEventListener("DOMContentLoaded",t),window.removeEventListener("load",t),e.ready()}var d=[],a=function(e){d.push(e)},i=function(t){window.setTimeout(function(){t.call(n,e)})};e.fn.ready=function(e){return a(e),this},e.extend({isReady:!1,readyWait:1,holdReady:function(n){n?e.readyWait++:e.ready(!0)},ready:function(n){(n===!0?--e.readyWait:e.isReady)||(e.isReady=!0,n!==!0&&--e.readyWait>0||(a=function(n){for(d.push(n);d.length;)n=d.shift(),e.isFunction(n)&&i(n)})())}}),e.ready.then=e.fn.ready,"complete"===n.readyState||"loading"!==n.readyState&&!n.documentElement.doScroll?window.setTimeout(e.ready):(n.addEventListener("DOMContentLoaded",t),window.addEventListener("load",t))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9qcXVlcnkvc3JjL2NvcmUvcmVhZHktbm8tZGVmZXJyZWQuanMiXSwibmFtZXMiOlsiZGVmaW5lIiwiZSIsIm4iLCJ0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsInJlYWR5IiwiZCIsImEiLCJwdXNoIiwiaSIsInNldFRpbWVvdXQiLCJjYWxsIiwiZm4iLCJ0aGlzIiwiZXh0ZW5kIiwiaXNSZWFkeSIsInJlYWR5V2FpdCIsImhvbGRSZWFkeSIsImxlbmd0aCIsInNoaWZ0IiwiaXNGdW5jdGlvbiIsInRoZW4iLCJyZWFkeVN0YXRlIiwiZG9jdW1lbnRFbGVtZW50IiwiZG9TY3JvbGwiLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxVQUFVLG1CQUFtQixTQUFTQyxFQUFFQyxHQUFHLFlBQWEsU0FBU0MsS0FBSUQsRUFBRUUsb0JBQW9CLG1CQUFtQkQsR0FBR0UsT0FBT0Qsb0JBQW9CLE9BQU9ELEdBQUdGLEVBQUVLLFFBQVEsR0FBSUMsTUFBS0MsRUFBRSxTQUFTUCxHQUFHTSxFQUFFRSxLQUFLUixJQUFJUyxFQUFFLFNBQVNQLEdBQUdFLE9BQU9NLFdBQVcsV0FBV1IsRUFBRVMsS0FBS1YsRUFBRUQsS0FBTUEsR0FBRVksR0FBR1AsTUFBTSxTQUFTTCxHQUFHLE1BQU9PLEdBQUVQLEdBQUdhLE1BQU1iLEVBQUVjLFFBQVFDLFNBQVEsRUFBR0MsVUFBVSxFQUFFQyxVQUFVLFNBQVNoQixHQUFHQSxFQUFFRCxFQUFFZ0IsWUFBWWhCLEVBQUVLLE9BQU0sSUFBS0EsTUFBTSxTQUFTSixJQUFJQSxLQUFJLElBQUtELEVBQUVnQixVQUFVaEIsRUFBRWUsV0FBV2YsRUFBRWUsU0FBUSxFQUFHZCxLQUFJLEtBQU1ELEVBQUVnQixVQUFVLElBQUlULEVBQUUsU0FBU04sR0FBRyxJQUFJSyxFQUFFRSxLQUFLUCxHQUFHSyxFQUFFWSxRQUFRakIsRUFBRUssRUFBRWEsUUFBUW5CLEVBQUVvQixXQUFXbkIsSUFBSVEsRUFBRVIsV0FBV0QsRUFBRUssTUFBTWdCLEtBQUtyQixFQUFFWSxHQUFHUCxNQUFNLGFBQWFKLEVBQUVxQixZQUFZLFlBQVlyQixFQUFFcUIsYUFBYXJCLEVBQUVzQixnQkFBZ0JDLFNBQVNwQixPQUFPTSxXQUFXVixFQUFFSyxRQUFRSixFQUFFd0IsaUJBQWlCLG1CQUFtQnZCLEdBQUdFLE9BQU9xQixpQkFBaUIsT0FBT3ZCIiwiZmlsZSI6InZlbmRvci9qcXVlcnkvc3JjL2NvcmUvcmVhZHktbm8tZGVmZXJyZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiLi4vY29yZVwiLFwiLi4vdmFyL2RvY3VtZW50XCJdLGZ1bmN0aW9uKGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdCgpe24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIix0KSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImxvYWRcIix0KSxlLnJlYWR5KCl9dmFyIGQ9W10sYT1mdW5jdGlvbihlKXtkLnB1c2goZSl9LGk9ZnVuY3Rpb24odCl7d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LmNhbGwobixlKX0pfTtlLmZuLnJlYWR5PWZ1bmN0aW9uKGUpe3JldHVybiBhKGUpLHRoaXN9LGUuZXh0ZW5kKHtpc1JlYWR5OiExLHJlYWR5V2FpdDoxLGhvbGRSZWFkeTpmdW5jdGlvbihuKXtuP2UucmVhZHlXYWl0Kys6ZS5yZWFkeSghMCl9LHJlYWR5OmZ1bmN0aW9uKG4peyhuPT09ITA/LS1lLnJlYWR5V2FpdDplLmlzUmVhZHkpfHwoZS5pc1JlYWR5PSEwLG4hPT0hMCYmLS1lLnJlYWR5V2FpdD4wfHwoYT1mdW5jdGlvbihuKXtmb3IoZC5wdXNoKG4pO2QubGVuZ3RoOyluPWQuc2hpZnQoKSxlLmlzRnVuY3Rpb24obikmJmkobil9KSgpKX19KSxlLnJlYWR5LnRoZW49ZS5mbi5yZWFkeSxcImNvbXBsZXRlXCI9PT1uLnJlYWR5U3RhdGV8fFwibG9hZGluZ1wiIT09bi5yZWFkeVN0YXRlJiYhbi5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGw/d2luZG93LnNldFRpbWVvdXQoZS5yZWFkeSk6KG4uYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIix0KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIix0KSl9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5abGJtUnZjaTlxY1hWbGNua3ZjM0pqTDJOdmNtVXZjbVZoWkhrdGJtOHRaR1ZtWlhKeVpXUXVhbk1pWFN3aWJtRnRaWE1pT2xzaVpHVm1hVzVsSWl3aVpTSXNJbTRpTENKMElpd2ljbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaUlzSW5kcGJtUnZkeUlzSW5KbFlXUjVJaXdpWkNJc0ltRWlMQ0p3ZFhOb0lpd2lhU0lzSW5ObGRGUnBiV1Z2ZFhRaUxDSmpZV3hzSWl3aVptNGlMQ0owYUdseklpd2laWGgwWlc1a0lpd2lhWE5TWldGa2VTSXNJbkpsWVdSNVYyRnBkQ0lzSW1odmJHUlNaV0ZrZVNJc0lteGxibWQwYUNJc0luTm9hV1owSWl3aWFYTkdkVzVqZEdsdmJpSXNJblJvWlc0aUxDSnlaV0ZrZVZOMFlYUmxJaXdpWkc5amRXMWxiblJGYkdWdFpXNTBJaXdpWkc5VFkzSnZiR3dpTENKaFpHUkZkbVZ1ZEV4cGMzUmxibVZ5SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVVFc1VVRkJVU3hWUVVGVkxHMUNRVUZ0UWl4VFFVRlRReXhGUVVGRlF5eEhRVUZITEZsQlFXRXNVMEZCVTBNc1MwRkJTVVFzUlVGQlJVVXNiMEpCUVc5Q0xHMUNRVUZ0UWtRc1IwRkJSMFVzVDBGQlQwUXNiMEpCUVc5Q0xFOUJRVTlFTEVkQlFVZEdMRVZCUVVWTExGRkJRVkVzUjBGQlNVTXNUVUZCUzBNc1JVRkJSU3hUUVVGVFVDeEhRVUZIVFN4RlFVRkZSU3hMUVVGTFVpeEpRVUZKVXl4RlFVRkZMRk5CUVZOUUxFZEJRVWRGTEU5QlFVOU5MRmRCUVZjc1YwRkJWMUlzUlVGQlJWTXNTMEZCUzFZc1JVRkJSVVFzUzBGQlRVRXNSMEZCUlZrc1IwRkJSMUFzVFVGQlRTeFRRVUZUVEN4SFFVRkhMRTFCUVU5UExFZEJRVVZRTEVkQlFVZGhMRTFCUVUxaUxFVkJRVVZqTEZGQlFWRkRMRk5CUVZFc1JVRkJSME1zVlVGQlZTeEZRVUZGUXl4VlFVRlZMRk5CUVZOb1FpeEhRVUZIUVN4RlFVRkZSQ3hGUVVGRlowSXNXVUZCV1doQ0xFVkJRVVZMTEU5QlFVMHNTVUZCUzBFc1RVRkJUU3hUUVVGVFNpeEpRVUZKUVN4TFFVRkpMRWxCUVV0RUxFVkJRVVZuUWl4VlFVRlZhRUlzUlVGQlJXVXNWMEZCVjJZc1JVRkJSV1VzVTBGQlVTeEZRVUZIWkN4TFFVRkpMRXRCUVUxRUxFVkJRVVZuUWl4VlFVRlZMRWxCUVVsVUxFVkJRVVVzVTBGQlUwNHNSMEZCUnl4SlFVRkpTeXhGUVVGRlJTeExRVUZMVUN4SFFVRkhTeXhGUVVGRldTeFJRVUZSYWtJc1JVRkJSVXNzUlVGQlJXRXNVVUZCVVc1Q0xFVkJRVVZ2UWl4WFFVRlhia0lzU1VGQlNWRXNSVUZCUlZJc1YwRkJWMFFzUlVGQlJVc3NUVUZCVFdkQ0xFdEJRVXR5UWl4RlFVRkZXU3hIUVVGSFVDeE5RVUZOTEdGQlFXRktMRVZCUVVWeFFpeFpRVUZaTEZsQlFWbHlRaXhGUVVGRmNVSXNZVUZCWVhKQ0xFVkJRVVZ6UWl4blFrRkJaMEpETEZOQlFWTndRaXhQUVVGUFRTeFhRVUZYVml4RlFVRkZTeXhSUVVGUlNpeEZRVUZGZDBJc2FVSkJRV2xDTEcxQ1FVRnRRblpDTEVkQlFVZEZMRTlCUVU5eFFpeHBRa0ZCYVVJc1QwRkJUM1pDSWl3aVptbHNaU0k2SW5abGJtUnZjaTlxY1hWbGNua3ZjM0pqTDJOdmNtVXZjbVZoWkhrdGJtOHRaR1ZtWlhKeVpXUXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKa1pXWnBibVVvVzF3aUxpNHZZMjl5WlZ3aUxGd2lMaTR2ZG1GeUwyUnZZM1Z0Wlc1MFhDSmRMR1oxYm1OMGFXOXVLR1VzYmlsN1hDSjFjMlVnYzNSeWFXTjBYQ0k3Wm5WdVkzUnBiMjRnZENncGUyNHVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWhjSWtSUFRVTnZiblJsYm5STWIyRmtaV1JjSWl4MEtTeDNhVzVrYjNjdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpaGNJbXh2WVdSY0lpeDBLU3hsTG5KbFlXUjVLQ2w5ZG1GeUlHUTlXMTBzWVQxbWRXNWpkR2x2YmlobEtYdGtMbkIxYzJnb1pTbDlMR2s5Wm5WdVkzUnBiMjRvZENsN2QybHVaRzkzTG5ObGRGUnBiV1Z2ZFhRb1puVnVZM1JwYjI0b0tYdDBMbU5oYkd3b2JpeGxLWDBwZlR0bExtWnVMbkpsWVdSNVBXWjFibU4wYVc5dUtHVXBlM0psZEhWeWJpQmhLR1VwTEhSb2FYTjlMR1V1WlhoMFpXNWtLSHRwYzFKbFlXUjVPaUV4TEhKbFlXUjVWMkZwZERveExHaHZiR1JTWldGa2VUcG1kVzVqZEdsdmJpaHVLWHR1UDJVdWNtVmhaSGxYWVdsMEt5czZaUzV5WldGa2VTZ2hNQ2w5TEhKbFlXUjVPbVoxYm1OMGFXOXVLRzRwZXlodVBUMDlJVEEvTFMxbExuSmxZV1I1VjJGcGREcGxMbWx6VW1WaFpIa3BmSHdvWlM1cGMxSmxZV1I1UFNFd0xHNGhQVDBoTUNZbUxTMWxMbkpsWVdSNVYyRnBkRDR3Zkh3b1lUMW1kVzVqZEdsdmJpaHVLWHRtYjNJb1pDNXdkWE5vS0c0cE8yUXViR1Z1WjNSb095bHVQV1F1YzJocFpuUW9LU3hsTG1selJuVnVZM1JwYjI0b2Jpa21KbWtvYmlsOUtTZ3BLWDE5S1N4bExuSmxZV1I1TG5Sb1pXNDlaUzVtYmk1eVpXRmtlU3hjSW1OdmJYQnNaWFJsWENJOVBUMXVMbkpsWVdSNVUzUmhkR1Y4ZkZ3aWJHOWhaR2x1WjF3aUlUMDliaTV5WldGa2VWTjBZWFJsSmlZaGJpNWtiMk4xYldWdWRFVnNaVzFsYm5RdVpHOVRZM0p2Ykd3L2QybHVaRzkzTG5ObGRGUnBiV1Z2ZFhRb1pTNXlaV0ZrZVNrNktHNHVZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJa1JQVFVOdmJuUmxiblJNYjJGa1pXUmNJaXgwS1N4M2FXNWtiM2N1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWhjSW14dllXUmNJaXgwS1NsOUtUdGNiaTh2SXlCemIzVnlZMlZOWVhCd2FXNW5WVkpNUFdSaGRHRTZZWEJ3YkdsallYUnBiMjR2YW5OdmJqdGphR0Z5YzJWMFBYVjBaamc3WW1GelpUWTBMR1Y1U2pKYVdFcDZZVmM1ZFVscWIzcE1RMHA2WWpOV2VWa3lWbnBKYW5CaVNXNWFiR0p0VW5aamFUbHhZMWhXYkdOdWEzWmpNMHBxVERKT2RtTnRWWFpqYlZab1draHJkR0p0T0hSYVIxWnRXbGhLZVZwWFVYVmhiazFwV0ZOM2FXSnRSblJhV0UxcFQyeHphVnBIVm0xaFZ6VnNTV2wzYVZwVFNYTkpiVFJwVEVOS01FbHBkMmxqYlZaMFlqTmFiRkpZV214aWJsSk5ZVmhPTUZwWE5XeGphVWx6U1c1a2NHSnRVblprZVVselNXNUtiRmxYVWpWSmFYZHBXa05KYzBsdFJXbE1RMHAzWkZoT2IwbHBkMmxoVTBselNXNU9iR1JHVW5CaVYxWjJaRmhSYVV4RFNtcFpWM2h6U1dsM2FWcHROR2xNUTBvd1lVZHNla2xwZDJsYVdHZ3dXbGMxYTBscGQybGhXRTVUV2xkR2EyVlRTWE5KYmtwc1dWZFNOVll5Um5Ca1EwbHpTVzFvZG1KSFVsTmFWMFpyWlZOSmMwbHRlR3hpYldRd1lVTkpjMGx1VG05aFYxb3dTV2wzYVdGWVRrZGtWelZxWkVkc2RtSnBTWE5KYmxKdldsYzBhVXhEU25sYVYwWnJaVlpPTUZsWVVteEphWGRwV2tjNWFtUlhNV3hpYmxKR1lrZFdkRnBYTlRCSmFYZHBXa2M1VkZrelNuWmlSM2RwVEVOS2FGcEhVa1prYlZaMVpFVjRjR016VW14aWJWWjVTV3d3YzBsdE1XaGpTRUp3WW0xa2VrbHFiMmxSVlVaQ1VWVkZjMVZWUmtKVlUzaFdVVlZHVmt4SE1VTlJWVVowVVdsNFZGRlZSbFJSZVhoR1VWVkdSbEY1ZUVoUlZVWklURVpzUWxGWFJYTlZNRVpDVlRCTmMxTXdSa0pUVlZGelVsVkdRbEpWVlhOaU1FcENVVmM1UTB4SE1VTlJWVVowVVd0UmMxSXdSa0pTTUZWelZEQkdRbFF3VVhOaU1FcENVVmM1UTB4Rk9VSlJWVGxGVEVWa1FsRlZaRWRNUlZaQ1VWVldURXhHUmtKUlZrVnpVakJHUWxOVlRYTlVWVVpDVXpCTmMxSlZSa0pTVTNoVVVWVkdWRlZEZUVoUlZVWklWRk40UmxGVlJrWlNVM2hNVVZWR1RGVnBlRXBSVlVaS1ZYbDRSbEZWUmtaTVJrNUNVVlpPVVV4RlpFSlJWV1JHVEVVNVFsRlZPVTVNUm1SQ1VWWmpjMVl3UmtKV01VbHpVbFZHUWxKV1RYTlRNRVpDVXpGWmMxSlZSa0pTVlZGelV6QkdRbFJWUlhOU01FWkNVbFpyYzFJd1JrSlNNVUZ6VkZWR1FsUlRlRlJSVlVaVVZFTjRTRkZWUmtoTVJURkNVVlU1VUV4RlpFSlJWVlpSVEVWa1FsRlZaR2hNUlRGQ1VWVXhhVXhGVmtKUlZWWnFURVpHUWxGV1JrUk1SazVDVVZaRmMxSlZSa0pTTUUxelZsVkdRbFpUZUVaUlZVWkdVWGw0VmxGVlJsWk1SazVDVVZaT2IxRnBlRWhSVlVaSVVWTjRSbEZWUmtaU1EzaEdVVlZHUmxvd1NYTlhWVVpDVjFkb1EweEZWa0pSVlZaTVRFVTVRbEZWTUhOVFZVWkNVekJGYzFSVlJrSlVVM2hVVVZWR1ZGTnBlRXBSVlVaS1VWTjRURkZWUmtwTVJXeENVVlYwUlV4RlZrSlJWVlp1VVdsNFZsRlZSbFpoUlVselVsVkdRbEpYVlhOV01FWkNWakpaYzFKVlJrSlNWMVZ6VlRCR1FsVlRlRVpSVlVaSVdrTjRURkZWUmtwTVJYUkNVVlV4UlV4RlZrSlJWVlp1VVdsNFZsRlZSbFpNUld4Q1VWVnNWVXhGVmtKUlZWVnpWVEJHUWxVd05ITlNNRVpDVW5sNFNsRlZSa3BUZVhoR1VWVkdSbEpUZUV4UlZVWk1WVU40U0ZGVlJraFRlWGhHVVZWR1JsZFRlRkpSVlVaU1lXdEpjMUpWUmtKU1ZYTnpVbFZHUWxKWFJYTlZWVVpDVlZjMVEweEZWa0pSVlZaMlVXbDRXRkZWUmxoaWEwbHpVMVZHUWxOV1JYTlNWVVpDVWxaSmMxWXdSa0pXTUZGelVsVkdRbEpWYzNOVVZVWkNWRmRrUTB4RmRFSlJWWFI1VVdsNFJsRlZSa1pYVTNoSVVWVkdTRlZEZUU1UlZVWk9URWRHUWxGWFJrdE1SVlpDVVZWV2VGRnBlRnBSVlVaYVRFWnNRbEZXYkhsUmFYaEdVVlZHUm1OVlNYTlpWVVpDV1ZoS1EweEZWa0pSVlZaNlVXbDRibEZyUmtKYU1FcEVURVpPUWxGV1RuZFJhWGhRVVZWR1VGUlRlRmhSVlVaWVZtbDRSbEZWUmtaVGVYaFNVVlZHVWxOcGVFWlJWVVpHWkRCSmMyRlZTa0pSVjJ4RFRFY3hRMUZWUm5SUmJscERURVZrUWxGVlpFWk1SVGxDVVZVNWVGRnBlSEJSYTBaQ1lWVkpjMVF3UmtKVU0xcERTV2wzYVZwdGJITmFVMGsyU1c1YWJHSnRVblpqYVRseFkxaFdiR051YTNaak0wcHFUREpPZG1OdFZYWmpiVlpvV2tocmRHSnRPSFJhUjFadFdsaEtlVnBYVVhWaGJrMXBURU5LZW1JelZubFpNbFo2VVRJNWRXUkhWblZrUTBrMlYzbEthMXBYV25CaWJWVnZWekYzYVV4cE5IWlpNamw1V2xaM2FVeEdkMmxNYVRSMlpHMUdlVXd5VW5aWk0xWjBXbGMxTUZoRFNtUk1SMW94WW0xT01HRlhPWFZMUjFWelltbHNOMWhEU2pGak1sVm5Zek5TZVdGWFRqQllRMGszV201V2RWa3pVbkJpTWpSblpFTm5jR1V5TkhWamJWWjBZak5hYkZKWVdteGlibEpOWVZoT01GcFhOV3hqYVdoalNXdFNVRlJWVG5aaWJsSnNZbTVTVFdJeVJtdGFWMUpqU1dsNE1FdFRlRE5oVnpWcllqTmpkV050Vm5SaU0xcHNVbGhhYkdKdVVrMWhXRTR3V2xjMWJHTnBhR05KYlhoMldWZFNZMGxwZURCTFUzaHNURzVLYkZsWFVqVkxRMnc1WkcxR2VVbEhVVGxYTVRCeldWUXhiV1JYTldwa1IyeDJZbWxvYkV0WWRHdE1ia0l4WXpKbmIxcFRiRGxNUjJzNVdtNVdkVmt6VW5CaU1qUnZaRU5zTjJReWJIVmFSemt6VEc1T2JHUkdVbkJpVjFaMlpGaFJiMXB1Vm5WWk0xSndZakkwYjB0WWREQk1iVTVvWWtkM2IySnBlR3hMV0RCd1psUjBiRXh0V25WTWJrcHNXVmRTTlZCWFdqRmliVTR3WVZjNWRVdEhWWEJsTTBwc1pFaFdlV0pwUW1oTFIxVndURWhTYjJGWVRqbE1SMVYxV2xob01GcFhOV3RMU0hSd1l6RktiRmxYVWpWUGFVVjRURWhLYkZsWFVqVldNa1p3WkVSdmVFeEhhSFppUjFKVFdsZEdhMlZVY0cxa1Z6VnFaRWRzZG1KcGFIVkxXSFIxVURKVmRXTnRWbWhhU0d4WVdWZHNNRXQ1Y3paYVV6VjVXbGRHYTJWVFoyaE5RMnc1VEVoS2JGbFhValZQYlZveFltMU9NR0ZYT1hWTFJ6UndaWGxvZFZCVU1EbEpWRUV2VEZNeGJFeHVTbXhaVjFJMVZqSkdjR1JFY0d4TWJXeDZWVzFXYUZwSWEzQm1TSGR2V2xNMWNHTXhTbXhaVjFJMVVGTkZkMHhITkdoUVZEQm9UVU5aYlV4VE1XeE1ia3BzV1ZkU05WWXlSbkJrUkRSM1praDNiMWxVTVcxa1Z6VnFaRWRzZG1KcGFIVkxXSFJ0WWpOSmIxcEROWGRrV0U1dlMwYzBjRTh5VVhWaVIxWjFXak5TYjA5NWJIVlFWMUYxWXpKb2NGcHVVVzlMVTNoc1RHMXNlbEp1Vm5WWk0xSndZakkwYjJKcGEyMUtiV3R2WW1sc09VdFRaM0JMV0RFNVMxTjRiRXh1U214WlYxSTFURzVTYjFwWE5EbGFVelZ0WW1rMWVWcFhSbXRsVTNoalNXMU9kbUpZUW5OYVdGSnNXRU5KT1ZCVU1YVk1ia3BzV1ZkU05WVXpVbWhrUjFZNFprWjNhV0pIT1doYVIyeDFXakYzYVVsVU1EbGlhVFY1V2xkR2EyVldUakJaV0ZKc1NtbFphR0pwTld0aU1rNHhZbGRXZFdSRlZuTmFWekZzWW01UmRWcEhPVlJaTTBwMllrZDNMMlF5YkhWYVJ6a3pURzVPYkdSR1VuQmlWMVoyWkZoUmIxcFROWGxhVjBaclpWTnJOa3RITkhWWlYxSnJVbGhhYkdKdVVrMWhXRTR3V2xjMWJHTnBhR05KYTFKUVZGVk9kbUp1VW14aWJsSk5ZakpHYTFwWFVtTkphWGd3UzFONE0yRlhOV3RpTTJOMVdWZFNhMUpZV214aWJsSk5ZVmhPTUZwWE5XeGphV2hqU1cxNGRsbFhVbU5KYVhnd1MxTnNPVXRVZEdOaWFUaDJTWGxDZW1JelZubFpNbFpPV1ZoQ2QyRlhOVzVXVmtwTlVGZFNhR1JIUlRaWldFSjNZa2RzYWxsWVVuQmlNalIyWVc1T2RtSnFkR3BoUjBaNVl6SldNRkJZVmpCYWFtYzNXVzFHZWxwVVdUQk1SMVkxVTJwS1lWZEZjRFpaVm1NMVpGVnNjV0l6Y0UxUk1IQTJXV3BPVjJWV2EzbFdibkJLWVc1Q2FWTlhOV0ZpUjBwMFZXNWFhbUZVYkhoWk1XaFhZa2RPZFdFeldtcE5NSEJ4VkVSS1QyUnRUblJXV0ZwcVlsWmFiMWRyYUhKa1IwcDBUMGhTWVZJeFduUlhiR2hMWlZad1dGVllWbWhpYXpGd1YwWk9NMkZYU25SU2JsSmhWMFV4Y0ZReWVIcGhWbkJJVm0weGFGWjZWbk5UVjJ3ellWWndWRk5ZVGtwaVZGSndWRVZPUzAxRmJIQmtNbXhxWWxaYU1GbHFUbUZpUmtwWlYyMTRhV0pzU2s1WlZtaFBUVVp3V0U1WGVHcGhWV3g2VTFjMWEyTkhTblJWYmxwclpWVnNlbE5YTlV0aVJteFlWV3BXU21GWVpIQlhhMDVLWXpCc2RGSlhiRTFSTUhBeldrWm9UMkl3YkhCa01teG9WVEJzZWxOWE5VOWlSMUpIVlc1Q2FWWXhXakphUm1oU1lWVjRSRk50Y0ZwV00yaDZVMWRzTTJGV2NIUk9SMnhOVVRCdmQxbFZaSE5sYTJ4d1pESnNZVmRIWjNkWGJHTXhZVEJzY0dReWJHaFhSVFZVVjJ4a1IyRXlWbFJUV0U1S1ltdHdjMWRXWkZOT1ZsbDVVbTVDYTFFd2JIcFRWekZ2WkcxS1NGVnNUbUZXTUZweVdsWk9TbU13YkhSbFIzaHBZbGRSZDFsVlRrcGpNR3gxVkcwNWFGWXhiM2RUVjJ3ellWZEdXVlJyWkd0V2VsWnhXa1ZrYzJSdFNuQlRXRTVLWW14S2RsZHNZekJoVlhoRVUyNXNZVll3V25KYVZscFBUVVpzV1ZWdGVFcGhXR1J3VjJ0ak5XRnRVbGhOVjNocFlteEtSMWxyWkZka1JuQllUbFJDU21GWVpIQlhhMk0xVmtacmVsTnVXbWxTTTJSd1ZFVk9TMkZHY0VoVmExcHJZbFphTVZwRlZqUmpSMDE2VlcxNGFXSldXalZUVjNkM1l6QnNkRTFYYUdwVFJVcDNXVzB4YTJWcmJIRmlNbXhTVmxWYVExVldWa1pqTVZaV1VtdEtWbFV6YUZkVlZsWkhWbXQ0U0UxVlRsSldWVm93VlZkc05GWkdSbFpTYkZKU1pWaG9SMVZXVmtkU2JFWTFaVVZvVWxaVldrbFVSVnB6VVd4R1dGSllUbFpOUlZwRFZsUkNUbU14VFhkU2EwcFVWbFpHZWxWc1ZrZFJiRXBXVmxoT2FVMUZjRU5WVm1NMVVUQjRTRTFWVGxKV1ZWb3dWVmQwVW1NeFNYZFNhMHBUVFVaV2VsWkVRa2RSYkZGM1ZWaE9hVTFGY0VOVlZtTTFVVEI0Ums5VlNsSldWR3hHVkVWV2ExRnNSbFphUldSTlVsWmFRMVZXVmxkVVJYaEhVbXRLVWxaclZucFZha0pIVVd4T1ZsUllUbFZXVlZwRFZYcENUbU14U2xaU2EwcFRWVE5vVlZWV1ZrZFdSbFpFWlVWb1VsWlZXa2xXUms0MFVteEdWbEpyV2xOVk0yaE5WVlpXUjFSR1ZuQmxSWEJTVmxWYVMxWlliRFJTYkVaV1VtdGFUVkpyTlVOVlZscFBWVlY0UmxwRlNsSldWMUpIVkVWVk5WRnNSbFpQVlRWTlVtMVNRMVZXV21wak1WbDNVbXRLVjAxVmJIcFZiRlpIVVd4S1YxUllUbFJOUlZwRFZYcEdXbU14U2xaU2EwcFRWbFpHZWxWNlFrZFJiRkpXVWxoT1UwMUZXa05WYkZweVl6RkpkMUpyU2xOTlZVWjZWa1pXUjFGc1VsUmxSbEpTVmxWYVZWWkZUalJUUmtaV1VtdG9UVkpVUmtOVlZsVTFWVVY0UmxwRlNsSldWbHBTVkVWV2ExRnNSbFphUjJoTlVsUkdRMVZXVlhoaFZYaEdWbXRLVWxaV1duRlVSVnBIVVd4R1YxSnJVazFTYXpWRFZWWmFSbU14U2xaU2EwcFRUVVV4ZWxac1ZrZFJiRnBVWlVWYVVsWlZXa2RWV0d3MFZteEdWbEpzV2sxU2F6VkRWVlphVDJJeFJuQmxSV2hTVmxWYVNWVldUalJTYkVaV1VtdGFVMUV6YUVkVlZsWkhVbXh2ZDFOWVRsaFdWVnBEVmpGa2IxRXdlRVpXYTBwU1ZsWmFUVlJGVlRWUmJFWldUVWhPVkZaVldrTlZla0pHWXpGU1ZsSnJTbFZWTTJoVlZWWldSMVpHVG5CbFJYQlNWbFZhUzFWV1RqUlVSa1pXVW10d1RWSlhlRU5WVmxZd1VsVjRSbFpyU2xKV1ZscDFWVmRzTkZac1JsWlNiRnBvVWxWc2VsVnNWa2RSYkVwWVZsaE9WMDFGV2tOV2FrcGFZekZLVmxKclNsTldNVlo2VmxSQ1IxRnNWbFJsUlZwU1ZsVmFTVmRyVGpSVVJrWldVbXR3VFZKWVVrTlZWbFY0VWxWNFJsWnJTbEpXVmxwMVZWZHNORlpzUmxaU2JGcE5VbGQ0UTFWV1ZuTldWWGhHVm10S1VsWldWbnBXVkVKSFVXeFZkMDVJVGxOTlJWcERWVzVzTkZOc1JsWlNhM0JVWlZob1IxVldWa2RTYkVwVVpVVjRVbFpWV2sxV1ZVNDBVMFpHVmxKcmFGUmxXR2hIVlZaV1IxSnNaRlJsUmtwU1ZsVmFVMWxYZEVwak1VcFdVbXRLVTFaWVRucFZiRlpIVVd4S1dGSllUbFpXVlZwRFZsWmpNVkV3ZUVaV2EwcFNWbFphTWxWWGJEUlhSa1pXVW14b2FXRXdiSHBWTVZaSFVXeE9WMUpZVGxOV1ZWcERWV3hhU21NeFdYZFNhMHBYVFVaR2VsVnNWa2RSYkVwV1l6Tk9WVlpWV2tOV1JtUnJVVEI0Um1SRlNsSldXRkkxVlZkc05GSnNSbFpTYTFwWVZUTm9TVlZXVmtkVFJsWkVaVVUxVWxaVldrOVVSV1JIVVd4R1dGSnJkRTFTVmxwRFZWWldWMlZHUm5CbFJuQlNWbFZhWVZSRlduTlJiRVpYWWtoc1VtRllhRWRWVmxaSFVtMU9WbE5ZVGxwV1ZWcERWMVpvUzFFd2VFWldhMHBTVmxaYU5sVlhiRFJpYkVaeVVtdEtZVTFGY0VWVVJWcFBVV3hHVjFSdVpGSmhXR2hSVlZaV1IxVkdVbFJsUm1oU1ZsVmFXVlp0YkRSU2JFWldVbXRhVkdWWWFGTlZWbFpIVld4T2NHVkZXbEpXVlZwSFdrUkNTbU15UmxaVGEwcFNWako0UkZSRlkzaFJNVVpXVW01U1VtSnNjRVJVUlZaclVXeEdWbHBGV2sxU1ZHeERWVlpWTldWR1JuQmxTRUpTWVRCYVExbFdWa3BqTVZGM1VtdEtWVTB4Y0VSVFYyd3pZVlp3ZEdKSVRtRlZNR3N5VTFjMVlXSkhTblJWYmxwcVlWUnNlRmt4YUZkaVIwNTFZVE5hYWswd2NIRlVSRXBQWkcxT2RGWllXbXBpVmxwdlYydG9jbVJIU25SUFNGSmhVakZhZEZkc2FFdGxWbkJZVlZoV2FHSnJNWEJVUlU1TFpXMUplbFp1YkZwTmJGbzJWVlJKTldSWFVraFdibFpyVVRCck1sWXpiRXRoTVhCWVYyNUNhV0pXVm5aV2VrWXpZVlY0Y0U1SVdscE5hbXcxVjJ4YU0yRlZlRWRrTW14TllWUlNNbHBITVVkbFZYZDVWVzVhV2sweFdqQlhiR014VFVab1JGTnRVazFTTVc5NFdXMHhUMDFIUmxoUFdGWk1VakZXZWxsdGJITk9NV2hFVTJwR2FrMXNWbTVaZWs1VFpWZEdXRlJxUWxsUk1Hc3pWMjAxVjJSV2EzcFZia0pwVFdwU2JscEZUbTVqUjFWNVRraFdhbUpXV2pCWmFrNWhZa1pLV1ZkdGVHbGliRXBPV1Zab1QwMUdjRmhPVjNocVlWZG9hbE5YZEZOVlJsSldWRzVhYVdKc1NuTlpiVFZUVkZkSmVWSnRkR0ZXTVVwcVUxZHNORTFGZEZSbFJFNW9WbnBXY2xscVRtcGtWMDUwVm01U2FVMHhjSE5WYkdoaFlrZEtkVlZyTVdoWFJUUjNWMnhqTVdKSFRuQmhSMDVLWWxob01sZFdaRk5aTUd4d1pVUkNURlV6YUhOVVJ6VkxZa1pzV0ZWcVZreFJNbmMxV2tjeFIyVlZiRWhWVkd4WVRWUkNlbGRXVVhoaVYxSllUbGR3YTFJeWVESlpiV3h2WWtWMFdXUkhkRTFpYTBsNFdYcEtibUl4Y0ZSaVJHeE5Vakp6TlZkdE5WZGtWbXQ2Vlc1Q2FVMXFVblphUlU1elRqSlJlV0pJVm1GU2VtdDZWRWMxVDJKSFVrZFZia0pwVmpGYU1scEdhRkppTVhCMVZtNVdXazB4U25kWmFra3dZakIwV1dSRVFrMWlWVFZ2V1d0a00ySXlTbkJsUjNoTVYwUkNkMXBzVWpCaVJYaDBWMjVXVFdKcmNITlhWbVJUVGxaQ1dGZHFSbWxpVlRSM1dWWmpOV1JWZEVoV1dFSnNUVEJ3YzFwRmFGZGxWMHB3VVcxb1RGSXhWbmRVUldoVFlqSkdXVlJxYkUxU01WWXhWMnhvYjAxR2NGaE9WM1JNVTBoU2QxbDZSa3RpUm14WVZXcFdVR0ZWVmpSVVJXaExZa1pzV0ZWcVZsZE5hMXAzV2tWU2RtVkZlRWhoU0ZwcFVqRktWRmRzWkVkaE1sWlZZMGN4YTFaNlZuRmFSV1J6WkcxS2NHRklWa3hYU0ZJeFZVUktWbVJYVG5SV2JXaGhVMGQ0V1ZkV1pITk5SWFExWTNwYVlWVjZWalZYYkdSSFlUSldWRm95YUU1Uk1uYzFWRVZvUzJKR2JGaFZhbFpRWWxadmVGbHRNVTlOUjBaWVQxaFdURko2VW5kYVdHeHZaRlpDVlUxRWJFcFdSVVYyVkVaTmVHSkZlSFZUYlhoYVZqRkpNVlpxU2tkalIxSkZZMGQ0VFdKWGVEWldWekZYWVVad1NXRXpRbTFUU0dSMlYyeE5NV05IVFhoVGJYaGFWakZKTVZWR1RrWmtNSGhJVGtkb1VWWkVRbTlVVlU1YVlsVjRWRTFYZUUxaWEzQnpWMVprVTA1V1dYbFNia0pyVWtSU00xcHJhRE5pTVd4VlRWY3hhMVo2Vm5GYVJXUnpaRzFLY0dGSVZreFhTRkowV1dwT1NtSXhjRVJPV0dSclYwVTFkbE13WXpCalJUaDVWVmhXYVZJeFdqRlhhazVUWWpBNU5XSklWbEZXTVVZeFdYcEtiMk5HY0hWVlZ6bE1WVE5vYzFSSE1YTmxiRXAxVm01V1drMHhTbmRaYWtrd1lqSktjR0V5TVV0aVYzUjJXVzFzYzA5VmRGUmFNMEpNVjBSRk5WTXhUalJpUlhoMVUyMTRXbFl4U1RGVVJ6VlRZakZ3V0U1RWJHRlZlbFowV1cxck1XVldjRmhTYlhSc1ZUTm9hbE5YTVU5a2JVcFpVVzVPWVZkR1NuTlhSVTVLVDFaQ1ZVMVlWazFpYTNCelYxWmtVMDVXVlhwVmJXaHJVakZaTkZwcldqTmhWMHBJVDFkb1lWSXllREZYYWtZellWVnNWVTFFYkdsaFZGWTFWMnhrUjJFeVZsZFVha0phVjBaS2MxTnRiRnBoUjBwd1RsZDBhVTFyTkhoWmJHUlhaRmRTUmxadVRtRldla1p6V1cwMVVtUldjRWhQVmxKYVRUQndNbGxyWkROTU1sRjVZa2hXWVZKNmEzcFVSelZQWWtkU1IxVnVRbWxXTVZveVdrWm9VbUl4Y0ZST1dHeGhWakJhY2xwV1RuSk9hM1JJVGtoV1dsWXhTbkpWYkdoaFlrZEtkVlZyTVdoWFJUUjNWMnhqTVdKSFRuQmhSMDVLWVRGS1VWWkdWazlrYlVwMVZXMTRhV0pzU2s1WmFrcEhZVEZ3V0ZWdFRrcGhXR2QzVXpGT05FMHlSbGhPVjNScFRUSk9NVmRXWkZOaE1VcFpWMjE0YVdKc1NrNVpWbWhQVFVad1dFNVhlR3BoVjJocVUxY3hOR1JzYkZoVmJVNUtZVmhuZDFNeFRuTlBWWFJWWkVkT2FXRlVhREpUV0d4RFpXMUplbFp1YkZwTmJGcFBWMVpvUTJReVJsaE9WelZYVm10d1RsVkdaRk5oUjFKSVVsUmFXbGRGU2pOWmEyUnpZV3hzV1ZWdVFtbE5hbEl5V1ZjMVQyUnRTbkZrUjNCb1VqQmFOVmw2U2xkTlJrSlpWbXBDWVdGdFl6TlhWekZIWld4d1ZWZFVRazFTTVZreFZUSndTMWxXWkVaalJGcGFWbTFOTVZwR1ZuTmpWMGw2WTBVeFVrMUlRVEpYVjNCUFZqSldWMkV6YkZkaWJrSkxXVmMxUTJGV1RsaE9WMFpwVWpCd01GWlhOV0ZoYlVaVllraG9XazFYYUZoWmEyUlBaRmRGZWxkdGNFNU5TRUo0VmtWU1MxUXlVblJVYmxKWFYwWndjVmxzV21GaU1XUnlZVWhLYTFJd2NEQlVNR2hUV1ZaSmVGZHVVbGhpUjJoTVdsWmFkMWRHVmxsV2JXaHBZWHBHZDFZd1drOU5Na1pZVTI1U1UySnNTbWhXTUZWNFkwWlJlV1ZJY0doV2JrSkpWbTB3ZUdGR1dqWldiazVVVmpKM2VsbFdaRWRqTVVweFVtMUdXRkpYT0hoVk1XUnpUVEpHVjJORmFGQldNMEp5Vm01d1IyTXhiSFJPVmtwb1ZsaG9SVlV5TVhkaFZURnhVbXBPV21FeVVsaFVWVnAzVjBaV1dHSkZNVkpOU0VFeFZqSjRhbVZIVW5SVmJsSlhZVEZ3Y2xsc1dtRk5WbkJHVm1wU2FsSXdNVFpXVnpFMFlWZEtWMWRxVmxSV01uZDZXVlprVW1WWFNrbFdiVVpUWlcxME5sVXhaSE5OTWtaWVZHNVNWMkpYYUdoVk1HUXdZMFpTUmxScmRHeFdia0paVlcweE1HSkdXbFpPVnpsYVlUSlJNRmxXV25OWFJsSjFVMjF3YkZaWGVEWlZNV014WVRKSmVHTkdhRTlXYXpWb1ZtcENZV05zY0ZkVWEzQnFUVWQ0TUZZeU5WZFRiVVpaV2toQ1drMUhhRmhhVnpGSFVrWk9XVlJyY0dsV2JHdDNWako0YTFRd01WaFZhMmhYWWtVMWFGWnFRbUZqYkhCWFZHdHdhazFIZURGV1J6RTBZVEZLYzFOdVpGcGlSMUpZV2tjeFUxZFdWbGhpUlRGU1RVaENlRll4V210T1IwMTNZa2hDYTAxdGVISlZha3B2WkRGcmVtSkZjR3BOUjNnd1ZtMXdVMkV4U1hoWGFrWllZVEExUzFsNlFuTmtSMHBKWTBaYWFWWnNjSFpXTW5SdlkyMUdWbVZGVWxSaWJYaG9WbXBDWVdOc2NGZFhiWFJvVWpCYVdsWldaSE5VVmtWM1kwaGFXbUZyYnpCWlZFWlhaRVphZEdGSFJsUlNNMUozVmtWV1QxTXlTWGxUV0d4c1VqTlNTMWxXYUd0alJuQkZVMnRrYWxJeFNrVlZNV2hQVTIxS1dXRklUbHBpVkVaeVZGVmtSMUpHVGxsVWEzQnBZWHBXTWxkV1dtdFpWVEZHWWtoQ2EwMXRlRzlXTUZVeFUwWndSMWw2Um1oaVZrcEpXV3RvWVdGWFJsWmlTSEJVVm5wV1ZGbHFSbmRYUlRWSVlrVXhVazFJUVRGV01uaHJVakpGZVZac1pGVmhhMHBoVmpCYVMyTXhUbGhpUkU1b1ZtNUNTVlF4WkhkaE1WbzJVbTVPV21KVVZsUlZiVEZMVTBaYWRWVnRSbGRsYkZZelZURmtjMDB5UmxkalJXaFFWbXhLWVZSVVFuZE5iR3h5V2tST2FGWllhRVZWTWpGdldWWkplRk5yWkdGU2VrWllXa1prVTFKdFZrbFJiWEJPVFZWd2VsZFhNSGhXTWxaV1lraE9UbE5GTlV0WmJGSkhZakZyZDJGRlRtcFNNSEF3VjJ0b2QxTnRSblJQV0VKV1ZteGFTRlZYZUVkV2JFcFpWR3hhVjFaV2NFWldWbWh6VGtaYWMxSnNXbFZoTUhCT1ZXNXdSMUpHVmxkV2F6bFRZVE5vU0ZaSGRFdFZiRnB6VjJ0V1ZWSldXbGhWVjNoSFZqRktjbFZyTVZOV01VcEVWbGQ0YjFNeFJYZGxSV1JwVWxWd1QxVnNXbUZSTVZKR1YyczVVbUpGV2xoV1IzUlRWRlpLV1ZWclRsWldSVnBNVld4V05GSnNXbkpUYkVwWFlYcFdTRlpGVm1wT1ZrVjRVbXhhVTJKdGFGTlpWbWh2VFVaV1dHUkZaRkppVld3elZUSjBWMVJXU2xoVmEwNVdWa1Z2TUZWc1drdFdSMVpIVVd4S1YxWldjRkpXVjNSUFRrZFNjMUp1U2xOaE1IQnhWbXhXYzJWc1drVlJhMlJTWWtaYVYxWldhRTlWTURGR1YydFdXazFHV2xCVmFrSTBVbXhhY2xOc1NsZFdSM2hPVmtWV1lWSXhSbkpOU0dSWFlrVTFUbFZzWkZOUk1WWlhWbTVPVTFKWWFFZFVWbFpMVldzeFNHRkZWbFZTVmxwWVZWZDRSMVl5UlhwVWJGcE9VbFp3UkZadGVGZFViVTE0VTFoa1UyRXhTbkZaVkVKM1UwWlNSbFpzWkZKaVJWcFpWbTEwYjFSV1NsbFZhMDVXVm14V05GVnNWalJTYlVwR1UyeE9XRkpyY0VWV1YzaFBUa1pLYzFKc1dsTmlXR2hPVlcxek1WRXhWbGRYYkdSVFRVaG9SMWRyVmt0V1JtUklZVVZTVmsxdGR6QldWVnBIVm14S2MxRnNWbXhYUjJoYVZsWmFWMUl4WkhKbFJXUmhVbFZ3VTFSWE5XOVNSbFYzVkdwU1UySkZXbGRWYlhSdlZrWlZlbUZGTVZaV2JGcElWa2Q0YTFKSFZrWlhiRXBYVmxad1dGWlhkRTlPUmxKSFVteGFhVkpGU2xOWlZFSlhaV3hXY1ZGclpGSmlSa1kwVld4b1QxVXdNVVpYYTA1V1lXdEtkVmw2UmxOV2JFcHlVMnhhVmsweWFGWldWbHBYVWpGYWMxTnFWbXhTVjJoVFZteGFWMDVzVmxoaVJGSlZZa1ZhVjFaWGRFdFZNVVY2WVVWc1ZsWnNXa2hXTUZwSFRsZFdSbUZHU2xkV1ZGWk5WbFJPYzA1R1VuTlNiRnBoVW1zMVlWbFdhRzlTTVZaWFZtdGtWbEp0ZHpGYVZWcExWV3hhV0ZWc1FsWlhSM2N3Vm10YVIxWnNTbk5WYXpGVFZteHdSRlpVUm1GVk1VcEdaVVZrVjJFd2NGTldiVEZQWld4V2MxWnJaRlJTYlZKSFZrWm9UMVl4V2xaWGEwNVhZbTEzTUZacldrZFdiRXB6VjJ4S2JGZEhhRXBXVmxwWFZESktWMUpzVW14U1ZuQlRWbXhWTVZSR2JISldhM0JxVFZWd1YxVnRkRXRXVlRGMFZXdFNWVkpXY0hwVlYzaExWakZHZEU5V1NtaFhSMmhJVmxaYVYxSXhWa2RVYWxac1VtdEtVMVpzVm1GVlZsSkdWbTVPVW1KRk5WbFpWVlpQVld4VmVtRkZPVlpXYkZwSVZsVldORkl4VW5KVGJFcFhZa1p3ZUZaRlZsZGpNVVp6VTFob2FGSlZjRTVWYkdoVFVURldWMWRyTldwTlZUVlhWVzEwUzFack1YRldhMUpWVWxaYVdGVlhlRWRXYXpsWVRsWkthRmRIYUZoV1ZscFhVakZrZEZKcldsUlhSVFZVVm14V1lWRXhXa1ZUYkZwcVRWWnNNMVZ0ZERSaFIwVjRVMjVTVlZKV1dsaFZWM2hIVm1zNVdHVkZNVk5oZWxaRVZsWmFZVlp0VFhoVGJGcFRZVEpvV1ZsVVNqQmxiRlkyVVd0a1VtSkdXVEZhVlZZMFZXeGFWbGRzWkZwaVdGSkxXWHBHUzFac1NuSlRiRlpPWWxaS1JWWkZWbUZXTVVaelVteGthRTB3TlZWV2JGWmhVekZTVlZGck9WZFdXR2hIVm0xMFMxVnNXblJrU0hCWFZrVktTRlZYZUdGV2JGSlpWR3hPVGxKV2NFcFhWRW93VTIxTmVGUnNXbE5oTWxKVFZteGFjMlZzVm5OV2EyUlNZa2hDVjFkVVRrOVdSVEZHVjJ0T1YxSnNXbE5aZWtaS1pERktjbGRzY0doTlYzZzJWbGQ0VjFJeFJuTmpSbWhWVjBVMVYxWnNWbUZTVm5CR1ZtdDBXbFpZYUVkV2JYUkxWV3hhV1ZWcmFGVlNWbHBZVlZkNFIxZEdXblJsUlRGVFlURndSRlpXVWt0WlYxWlhVbTVDYkZKV2NGTldiRlpoVlZac05sRnJjR3BOVm13elZXMTBTMWRHV1hoU2JuQldUVlphU0ZWclpGTmpiRTV5VjJzeFUxWnNjRVJXVmxwclZERkpkMlZGWkdGU1ZYQllWbTV3VjFKR1dsaGlSRkpUWWtWYVYxVnRlRU5XUjFaWllVVTVWbFpzV2toV1J6RkdaREZPV1ZSc1VrNVNWbkJFVm10U1QxbFdSWGRsUlZwWFlUQndVMVpzVW5OVk1WSkdWbTEwVW1KRldsZFhhMVp6VkZaS1ZWSnJUbGhpUmxwVFdYcEdjMVpzU25KVGJYaFRWbGhDVFZaRlZsZFdNVVp6VW14a1ZXRnJXbE5aVm1odldWWldWMVpyT1doU1dHaElXV3RXUzFWc1pFaGhSVkpoVWpOU1MxbDZSa3RXYkVweVUyeGFUazFXY0VWV1JWWnJVakZHYzFKc1ZsaGhNRFZ5V1ZSQ2MyVnNWbk5XYTJSU1lrWldObGRyVms5VVZrbDVWV3RTVmxac1draFpiWGhIWTJ4U1dWUnNXazVTVm5CS1YxWmtNRll3TVVkU2JrSnNVbXRLVTFac1ZtRlZWbHBKWWtSU1dGSnJXbGRWYlhoM1YwWkZlbUZGWkZaV2JGcElWbFZhVDA1WFZrZFRiRXBYVjBVME1GWldaREJrYlUxNFUyeGFVMkV3Y0ZkYVYzUkxVa1pTUmxwSVRsSk5WVnBYVlcwMVMxVnRSbGxoUkVKV1ZqTlNTRlZYTVVwa01VNXhWMnhLYUZkSGFFcFdWbHBYWVcxU2MxSllaRmRYUlRWV1ZGVldZVkV4V2tWVWJHUlNUVWhvU1ZsclZrOVZiRnBXVjI1c1ZsWXlkekJXVlZwSFZteEtjMU50ZUdoTlIzaDNWa1ZXVDFNeVNsaFNiR2hzVWpOb1MxbFhNRFZqUm5CSVRWWmthMVp1UWtsVU1XaHpWRlV4ZFZGcVVtRlNiVkpZV2xaa1YxWkZPVmxqUjNCcFZsUkZlVll4VWtwT1YxWlhZMFpTVUZkSGVHaFdha0poWTJ4d1YxUllhR3RXTUc4eFZGWmtNRmxXV1hoalNFNWFUV3BXVEZsclduZFNSVFZaVW0xd2JGWlhlRFpWTVdNeFZESlNkRlZzYkZSaVdFSm9WakJWTVZKV2JIRlRWRVpPVW01Q1dWUnNVa05UYlVaMVVXMXNWRlo2UmxSWmExcDNaRWRLU1ZadFJsWk5iVkoxVm01d1IwNUhWbGRoUldoUFZqQTFjbFZ0Tld0alJsSklZWHBDYTJKSGREVlVNV2h6V1ZaYWRWcElRbFZTVm04d1dsWmFiMU5GTlZoVWJYUlRZbTFTZDFaRlpISk5SMUowVlc1U1UySnRlRTVVVjNoTFRXeGtWVlJzWkd0U2JrSlpWR3hTUTFkV1JYZGpSM0JhVFc1bk1GcEdXbTlXUjFGNVdrZEdhV0pHYjNoV01WSlBWVEpPU0ZOWWJFOVNlbXhMVldwT1ExVXhjRWRhUm1Sc1ZqRmFWVnBFU210WlZrbzJZa2hHWVZKdFRqUlphMlJMWkZaV1dGcEZlRlpOUld0NlZqQldiMU14YTNsVGJrNXNVMGQ0V2xWdWNGZGhiRTVZVGxaa2JHSklRbFZWVnpWM1lURk9SbU5JWkZoV1JUVlVWMVJDYzJOWFVraFViWEJwVTBkbmVGWXdWbTlUTVd0NVUyNVdXR0pYYUhGWlZsWkxUbFprYzFwRlpHaE5iRnBYVmtjeGIyRldTWHBoU0VKWVZtMVNVRmt5TVU5T1ZrWlZZa1Z3VTJKc1NuSldSVlpoVGtkV1YyRkZhRTlXTURWeVZUQmtVMlJzWkhOWmVrWldUVmhDV1ZWdE1UQmlSbFYzVWxSV1ZGWlhVbWhVVm1STFpFWlNjVkZ0YUZkbGJYZDRWWHBDVDFFeVNsaFRia0pTVjBWS1MxVXdhRk5oYkd0NVpVUlNhMVp0YUVwV1Z6RlBZVEZPUm1OSVRsaFdiVkpVVkd4YVJtVldTblZVYld4VFRVaENkbFl4VWt0TlIxWnlaVWhXVW1GclduRlVWekZyWkd4T1ZscEhSbXRXVjNoRldWaHdhMWRXVGtaalIzQmFZbGhuTUZSVlpHRldSMVpJVkcxd2FWTkhaM2hXTUZadlZUSktTRlpyYUZkaVdFSnlWakJhUzJNeFdsaE5WbVJvVW01Q1NsbFVTbXRWVmxWM1UyNVNZVkp0VFhoWlZ6RlRVMGRLU1ZkdGJHaFdNbEoxVmpJd2QwMUdiM2RrUmxKU1lXMVNXbFV3Vm5kaGJHeDBaVVJTYkZadGFFbFViR1JQWVRGS2RWb3paRlZUUjNNd1YycEdWMU5XVG5SbFIzUnBWbXh2ZUZkclZrOVJNa3BJVkc1V1ZHSnNjSEZaYlhONFlteGtkRTVWZEd0aVZYQlZWVmN3ZUdGdFNsZFhiazVoVm5wR2VscEdXbmRPVmtaMFRWZDBXRkpyYkRSWFZFbDRWbXh2ZUdFemJGTmlhelZ3VldwQ2QySXhaRlZUYm5CaFRWaENXbGxWWkRSWGF6QjRWMWhrV2xadFRURmFSbFp6VWtkR1NFNVhhRkpsYTBrd1ZrUkNVMU50Vm5Ka1JtUnNVMGQ0V2xWdWNGZGhiSEJHVjJwU1RsSllaekZVTUdSclZsZEtWV0V6WkZSV1YxSk1XVlZhY21WWFVrVlViSEJZVWxoQ2VWZFVUbkpsUjBaMFUxaHNUbGRIVW1GV01GcExaREZrV0UxVVVtbFNWM2hKVlcwMWQxTnNUa2RUYmxwYVZtMW9UMWRxUm5kVFJUbFlaVWR3YkZaVmIzaFhWM0JQVld4dmVHTkdiR2hTTTJoaFZGUkdXbVF4WkhOVWEwNXNZbFphV1ZSc1pIZFhWazVHWTBkd1dtSllaekJVVlZwdlUxWldjVlJ0YUZkbGJGcDVWMWR3VDJGdFVsaFVXR3hYWVd0S1dGVnFTalJOUm1SeldYcFdUbFl4U2tWWGFrcHJXVmRLYzFkcVJsaFdSVFZVV1RCa1NtVlZOVWhQVlhoV1RVVnJlbFl3Vm05VE1XdDVVMjVPYkZKRlNscFZNRnBMWVd4d1JscEhSbXRXV0dnd1ZrY3hiMkZXU1hwYVNGcFVWbGRTVkZwSGVISmxiRnAxVlcxR1YyVnNWak5XUlZaUFVUSk9WMVpzYkZkaVdHaHhXVzB4TUdKc1RYaFZha0phVFdzMWVscFZhRmRYVms1SFUyMXdZVkpYWkROWGFrSXdWbGRTU0ZSdGNHbFRSMmQ0VmpCV2IxVXdPVlpQU0doc1UwZDRXbFZ1Y0ZkaGJHdDVaVVJTYTFZd1ducFZiWEJIV1Zaa1JtSjZSbFZTZWtab1drWldOR1JXVG5SbFJuQlhUVlZyZUZVeFZsSmtNVzk0WTBoV1YySnNXbUZVVkVaTFpERnNjVk5VUW1sTlIzaEpWakkxVjFOc1JYbGtSelZoVmtWWk1GcFdXbTlUUlRWWVZHMTBWRkl4U2pKV01uaHFUVlpWZUdOR2FGTmlXRkp6VmxSS2EySnNaSFJOUkVKaFRVaFNWbHBGWkU5aGJVcEpZVVJHV0ZKWGFGUmFWbHAzVjFaV2NWSnRjR2xXUmtwMVYydFdhMkl5VGtoVWFscHJVakExY1ZscmFHOU5WbkJ6VldwQ1drMXJOWHBhVldoWFYxWk9SbU5IY0ZwaVZFWXpWbGN4VTFkR1duVmlSM2hXWld4YWVsZHNWbTlWTWtwSVUyNVNWbFo2YkV0Vk1HaFRZV3hyZVdWRVVtdFdiV2hLVlRJeFQyRlhTa2xhTTJSVlUwZHpNRmRxUms5WFZsSllXa2QwVTAxdGFIcFZNVlpYVlRGV1IxVnNVbEppYlhob1ZtcENZV05zY0ZkVWEwNU9VakJ2TVZWWE1YTlpWbFYzVTFob1dtVnJjRmhaVkVaRFRsWkdjMVZ0UmxoU2ExcDFWMnRXYWs1R2IzbFZhMnhVWVd0YWFGWlVRa3ROYkd4MFRWVTVhVkpYZUVsWmExSkRVMnhLTm1KSVJsaFdSVFZZV2xaa1QwNVZOVmhVYlhCcFUwZG5lRll3Vm05Vk1rNUlWRmhvVkdKWWFHRldha1pLVFZaUmVXSkZUbWxXYlhoWldsVm9kMWxXVlhwaFIzQmFUVzVuTUZwR1dtOVRWazUwVkcxc2FWTkhaRE5XUldoeVRrWnZlRkpzVWxKaVdFSndWRlJHWVUxV2NFWmFSbVJzVmxkNFNsWlhOV0ZUYkU1SFUycFdXRlp0VWxCWk1uUnpVMGRHU1ZkdGRHeFdWVzkzVmpGYWFrMVZOVlppUldocFVrVkthRlp1Y0VkT2JFNVdZVVpPYTJFeWVFcFhhMlJ2WVVaa1IxSnROVmhpVkVFeFdsWldjMU5HVG5SbFIwWnBWa2QzTVZZeWVHRk9SMVpYWVVWb1QxWXdOWEpWV0hCdlRXeE9WbUZHVG1sTldFSlZWVmMxYzFsV1dYZFhia3BoVm1zMVJGbHJaRk5rUmxwMVZtMTBVazFGY0RCWFZscHZVekpLU0ZScVZrOVNNbEpYVkZkNFlXTXhUbFpVYXpWT1lYcFZNbGRxVG05WFZrNUdZMGR3V21KWVp6QlVWV1JQWkVaYWRHRkhSbFJTTTJoYVZqRmFhMk13TVVaUFdFSlNWMGRvVGxWdE5XOU9WbVJHV1hwR1drMXJOWHBhVldoWFYxWk9SMUpxU2xWVFIzaEVWVEZrU21WWFZraGtSWEJTVFcxbmVWZFVTbk5STWxaWFkwWm9iRkl6YUdGV01GVXhZekZOZUZSclRrNVNNRnBKVm14a2EyRnRTbGRYYlRsWVlUSm9lVmRxUm5kWFZtUjBaVWRzYVdKRmNIRlhWRW8wVGtkU1YyRkZiRlppVkd4d1ZGYzFiMk5zV2xoTlZtUm9VbTVDU2xsWWNHRlRiRWw0WWpOb1dtSlVSbEJVVldSSFYwVTVXVlpyZUZKTlJYQXlWMWR3UzA1SFJYZGlSVkpvVFcxU2MxUldhRzlPVm1SR1dYcEdXazFzU2toYVZWSkRZVVpaZUdKSE5WUk5SVFZFV1dwS1NtVlhWa2hrUlhCU1RXNVNkVmRzVWtkT1IxWlhZVVZvVDFZd05YSlZiVFZ1WkRGa1JtRkdUbXBXYkZwYVZtMHhOR0Z0U25Sa1JFWmFUV3BHV0ZsVlduZFRWMHBIWVVad1YwMXVaRE5WZWs1elpXczBlR0ZGYkZSaVZUVndXV3RvYm1ReFpFWmhSazVRVmxkNFNWWnROVTloYXpGelZtMDFZVlpGV1RCYVZscHZVMFUxV0ZSdGRGTmliV1F6VmpCV2IxVXlUbGRXYkd4WFlsaG9jVmx0TVRCTlZtdDVUVlprYUZKdVFrcFpWRWsxVTJ4T1IxTnFWbUZTYlZKWFYycENNRlpYVWtoVWJYQnBVMGRuZUZZd1ZtOVZNV3Q1Vld0c1RsWXdOWEZaYTJodlRWWmtSbUZHVGxCV1dHaElXbFZvYzFkV1NqWldiWEJhVFc1bk1GcEdXbTlUVmxaMVlrZEdWMDFHY0hsWGJGcFRaR3h2ZUdOSVZsZGliRnBoVkZSR1MyUXhiSEZUVkVKcFRVZDRTbGRyWkc5aFJtUkhVbTAxVkUxVk5VUlVha1p2VTFaT2RGUnRiR2xUUjJjeFZqQldhazFXYTNsVmEyUnNVa1ZLVGxwV1VtOWliRlpYV2tWMGEySlZOVEZXVm1ScllVWlplR0pITldGU1YxSjJXV3RrVDJSR1dsaGFSbkJZVWxoQ2VsVXhWbTlSTWtwSVUyNVNWbUpyU25CWmJHUlBZbXhzVmxsNlZtcE5XRUpLVmtaa2EyRlZNSGRpUnpWaFVrVndWMWx0TVU5a1JscFlXa1p3VjAweVp6RldNbmhyVWpKRmVWWnNVbEppYlhob1ZtcENZV05zY0ZkWGFsSnNWbTFvU1ZSc1pFOWhNVXAxV2pOa1dsWnRVbUZYYWtJd1VrWkdjVlJzY0ZkTmJtUXpWVEZXVW1Rd09WZFJiRkpTWVd0S2NWbHRlR0ZqTVU1V1ZWUlNZVTFJYUZWVVZtaEhWbXhrUjFkdVRscE5hbFo1V2taa1QyUkdXblJoUjBaVVVqTm9XbFl4V210ak1ERkdZa1ZXYVUxdFVtOVphMVphWlVaa2MyRkZkRTlXV0dnd1dXdG9kMVp0U2xkWGJUbFlZVEpvZVZkcVFqQldSa1p4V2tac1ZGSllRbkZYVnpFMFRrVXhSMkZGYkZaaVZUVnlWVEJXZDJNeGNFWmhSbVJzVmpCd2VGcEZaRTloYlVwSllVUkdXRkpYYUZSWFZFcFRVMVV4V0ZSdGNHbFRSMmQ0VmpCV2IxTXhhM2xUYms1c1VrVktXbFV3V2tkTmJGSkpZa1ZPVmsxWVFsbFVWbVEwWVZaWmQyTklUbHBOYlhoRVZGVmtSMU5HU25GUmEzQlVVbXR3TWxZeWVFOVJNVXBYVlZoa1RsSXlVbTlXTUZWNFlteHJlVTFXWkdoU2JrSktXV3RrVDJGdFNrbGhSRVpZVWxkb1ZGZFVTbE5UUjA1SFUyMTBWMDFXYnpGWGJGcE9UVmRPU0ZSWWFGUmlXR2hoVm1wR1NrMVdUbFpWV0dSaFRXeEtTbFV5Y0VkWlZscEpWVzF3V2sxdVp6QmFSbHB2VTFaT2RGUnRiR2xUUjJRelZqQldiMVZ0VW5KbFJGWlNZVE5DYUZsV1ZrdGlNVTVXV1hwR2EySlZOVEJVVm1SdllWWkZkMU5yV2xkU1JVWXpWMnBHVjJSR1duUmhSMFpVVWpOU2RWWXllRzlaVjBwSVUyNVdWbFl5VW1oWmJHUTBUbFprYzFwR1NtcE5SM2hKVmxjeE5GZHJNSGRqU0U1YVlrZFNXRnBHWkZOU1IxRjVXa1p3VjJWc1dubFZNVlp2WVRKR1NGSnNiRlpXTWxKdlZtcEdjMkpzYkhSTlZtUnBVbTVDUlZWWE1YTlpWbHAxWVVSV1dGSlhUWGhYVkVwVFVqSldSVkZ0YUZkTlYzaDFWWHBDVDFFd01IaGlSbWhwVWtWS1MxVlVRbFpPVmxaSFZHdE9UbEl3TlRGV2JURTBVMnhGZUdKSVVsUldWVEV6V2tWa1IyTXhTbkZTYlVaWVVsYzRlRlpGWXpGVE1rcEhZa1pvVm1Gc1dsaFVWM1JoWkRGd1JsUnJTa3hOUjNoR1ZWWmthMVJHVlhkVFZFNVlVbGRvVEZkVVNrdGpNbFpGVVd4c1ZGSnJjSEZYYTFadlV6SktTRlZyYkZkaWJYaHdXVmMxVTJGc2EzbGxSRkpyVm0xb1NsWlhNVTloTVU1RlVtMXdXazF1WnpCYVJscHZVMVpPZEZSdGJHbFRSMlF6VmpCV2IxVXdNSGxTYTJoWFlteGFWMWxzV21GaU1XUnlZVWhLWVUxVlNsVlZWekI0WVRGYU5sWnVSbUZTVjFKNldrY3hTMk5HYjNsYVIwWnBWa1pLZFZWNlJrOVJNRFI0WVVWc1ZHSlZOWEJaYTJodVpERmtSbUZHVGxwTmJFcEtWVEl4TkZkc1dYaFRWRVpXVmtWd1NGbDZTa3RUUms1MFlVWndUbUpzU1RKV1JXTXhVVEF4V0ZSWWJHRk5hbXhMVldwR2QwMVdUbFpVYmtwUFRWZG9TbFV5TVU5aFYwcEpZVVJXV0ZKWFRYaFhWRXBUVWpKV1JWRnNiRlJTYTJ3MlYxWldhMk15VFhoalJsSlNWbnBzUzFVd1ZuZGpNV1JYV2taT1QxWnJWalZWYlRWUFlWWkpkMk5IT1ZoV1JXOTNXbGQwTkdSSFZraGxSMnhwVmpGR00xZFdWazlSYlU1R1lrVnNhMUl3TlhGWmEyaHZUVlprUm1GR1RscE5iRXBJV2xWU1ExZFdUa2RUYmxKYVlsZDRRMVF4Vm5OVFZrNTBaVVp3VjAxVmEzaFdWbEpMVWpKTmVWTnJhRlJpVjJoaFZGYzFVMDVzVWtoT1ZUbHBUV3RhV1ZZeWNFTlVSa1Y1WTNwT1dGSlhhRXhYVkVwTFl6SldSVkZzYkZSU2EzQnhWMnRXWVU1Rk1VaFNiR2hZVmpKU1RWVlVRa3RsUmxwWFlVWmthVkl3TlRGWlZFNVhZVVprUms1VmFHRlNiVTE0V1ZjeFUxTkhTa2xYYld4b1ZqSlNkVll5TUhkTlJtOTNaRVpTVWxkRlNrdFZNR2hUWVd4cmVXVkVVbXRXYldoS1ZsY3hUMkV4U25WYU0yUllVbGRvVkZkVVNsTlRSbHB4VlcxR1YwMUVValJYYTFaclZqRlZlR05HYUZOaVdGSnpWbFJLYTJKc1pIUk5SRUpoVFVoU1ZscEZaRTloYlVwSllVUkdXRkpYYUZSWFZFcFRVakpXUlZGc2JGUlNhMnN4VmpCV2IxTXhhM2xUYms1c1VrVktXbFV3V2t0aGJIQkdXak5vV2sxck5YcGFWV2hYVjFaT1IxTnRjR0ZTVjJRelZHcEdiMU5XVG5SVWJXeHBVMGRuTVZZd1ZtcE5WbXQ1Vld0a2JGSkZTbkpVVnpGdll6RnNkR1ZGZEdsU2JYaFpWbGR3VjFSR1JYbGplazVZVWxkb1RGZFVTa3RqTWxaRlVXMHhWMkp0WnpGV01GWnFUVlU1Vm1KRlVtaGxiVkphVlRCV2QyRnNiSFJsUkZKc1ZtMW9TVlJyYUdGVVYxWldVMnM1V0ZadFVYZFphMVp6VTBkT1IxTnRkRmROVm04eFYyeGFUazFYVmxkalJtaFRZbGhTYzFaVVFrdFZiR3Q1VFVSV2ExSXdXbHBXUnpFMFUyeEpkMDVVU2xwaVZGWlFWRlprUzFkR1NuUmlSMnhUVFZaYWRWVjZRbXRoTWtsM1pVWldVMVpGTlZCYVZ6RnJaREZrUm1GRmRGcE5hM0F3V1RCYVMyRXhXWGhYYWxaaFZtc3dlRnBXV25kWFJrcDBaRWQ0Vm1Wc1ZqTlhWbFpyVmpKU1ZtSkZWazVTTWxKdldXdFdXbVZHWkhOaFJYUlBWbGhvTUZZeU5WZFVWMHB5WTBoT1dGWnRVbFJVYkZVMFpVZFdTV0pHYkZObGJGcHhWMVJLTkU1SFVsWmxSRlpwVFRCYVdsVXdWbmRoYkd4MFlrVkthbFpYZUVoV1Z6QTFXVlpWZDFOcVZsaGlSMUpJV1ZSS1YxWkdSblJsUjNScFZteHZlRmRyVms5Uk1rbDRZa1pvVDFZelVuQlZha1poVGxaT1ZscEZaR3RXYmtKRlZWYzFkMWxXV1hwaFNGSlVWbGRTVUZsNlJuZFhSa3AxVm0xMFdGSlZXblZYVjNoclZqQXhTRkpyYUZCV00xSmFWVEJXZDJGc2JIUmlSVXBxVmxoa05GcFZhSE5YVmtvMlZtNVNZVkp0VFhoWlZ6RlRVMGRLU1ZkdGJHaFdWWEI0VjFkd1NtVkhVWGxUYTJoWFlXdEthRlpxUmtka2JFMTRWR3RPVDAxWGFFcFZNakZQWVZkS1NWb3paRmhoTWsweFdWY3hVMWRGTVZobFIyeHBZa1ZaZUZkVVNYaFdNbEpJVTFod1dHSllhRlJXTUZwM1l6RnNkRTVXVGxWV01GcGFWa2R3UTFsV1dqWldiazVhVFcxNGRWZHFSbTlTUms1eVZteFdUbEpGV2taWFYzQktUVlV4UjJOR2FFOVdSVXBXVlc1d2MySXhaSEphUm1Sb1RWZG9SVlV4YUU5VGJFbDNUbFJLV21KSGFFUlpla1ozVjFaV2RHVkhSbEpOUlZvelZraHdSMDVIVmxkaFJXaFBWakExY2xVd1pGTmtNV3gwVFZaT2EySldTVEZVYkdoeldWWmFObEpxU21GU2VrWllWVzB4VTJSR1duVldiWFJUVjBkb00xZFljRTlWTWtwSVUyNVNWMkp0ZUUxVlZFSkxZV3hPV0UxVVVtdGlSM2haVmxjeFQxTnRSbGxhUnpWWVZrVnJNVnBGWkU5VFIxWklaVWQwVTAxV2NIbFZNVlpQWTJzMGVHRkZiRlJpVlRWd1dXdG9ibVF4YkZobFJXUk9WbTVDV2xVeWNGZFVWMHB5WTBoT1dGWnRVbFJVYkZZd1VrZEdObHBHYkZSU1dFSnhWMWN3TUdWR2EzbFViazVzVTBaYVdsVXdWbmRoYkd4MFlYcFNhMkV5ZUVkV1J6RnZZVEZKZDA1WVdsUldWMUpRV1ZWa1RtVldXblZqUlhCVVVqRktNbFl5ZUc5VE1rcEdZa1ZTVmxaNmJHaFZibkJ6WTFad1Ixa3phR2xTTUhBeFZsWm9RMVJYU25KalNFNVlWbTFTVkZSc1ZqQlNSMFY1V2tkb1dGSlVSblZXTVZKTFVqSk5lVk5yYUZkaVdGSmFWVEJXZDJGc2JIUmhlbEpyWVRKNFNWVnRNSGhoTVVsNFYycFdWRlpYYUZSWmFrWjNWa1pHZEdKSGNHbFdSM1EyVjFod1MxWXlWbFppUldoWFlXdHdhRlp1Y0Zaa01VNVdXa2M1YUZJd05ERlZWekZ2WVZaT1JtTklUbGhXYlZKVVZHeFdjMU5GT1ZoalJuQk9UVlp2TVZkVVNYaFdNa1YzWlVoT2JGTkhlRnBWYm5CVFRXeFNTV0pGVGxkU01VcGFWVmMxYTJGVk1IZGlNMlJWVFcxNFJGVXllRXRXVjBWNlZXczFWMUpWV25WWFYzQktUVmROZVZac1pHeFRSM2hhVlc1d1UwMXNVa2xpUlU1V1VqQndTVlpYTVRSaGJVWldVMnQwVm1KRk5VUmFWekZLWlZVeFdHVkhkRk5OYm1kM1ZqSjRiMVJzYjNsVVdHeHBVbnBXY0Zsc1ZtRmxiR3Q2WWtWT1drMUhlREJaYTJoWFlURkplRmRxVmxoV2JWSlFWRlZrUjFkV1pIUmxSbXhTVFVkNGRWZHJWbXBPVjFKeVlrVnNWV0pzY0hCVVYzQlhZV3hyZVdWRVVtdFdNRnBaVmpGa2ExUkdSWGRUYmtwYVlXdHdVRlJXWkV0WFJscDFWbTEwVW1Wc1dURldNbmhyVWpKRmVWWnNaRlZoYTBwaFZqQmFTMk14VGxaVldHUlFWbXRLVlZWWE1VOVRiVXBXVGxSS1dtSkhhRVJaZWtaM1YxWldkR1ZHYkZKTlIzaDFWMjEwYjA1R2EzbFViazVzVTBaYVdsVXdXa2RrYkU1V1drWk9hMkpIZERaV2JUVlRXVlphTmxaWVpGVlNlbFpNV1d0YWMxZEdWbkZXYkZwT1RWVndkbGRyVm10V2JHOTNZa1pXVGxKSGVFdFZiVFZyWTBac2NsbDZWbWhTYmtKSldXdG9WMWxWTVZsYVNFSlVWbFUxWVZsc1ZuTlNSa3AwWkVkc1RtRjZValJYVjNoclZqSlNXRlZyVWs5V00xSndWRmR6TUdWR2JITmFSbVJyVmpGS1IxWnROVTlaVmxvMlVtNU9XbUpVVmxOYVJscDNVMFU1VjFWc2NFNU5TRUY1VjFkMGEwMHhiM2RrUmxKU1YwVktTMVV3YUZOaGJHdDVaVVJTYTFadGFFcFZNakZQWVZkS1NWb3paRlZUUjNNd1YycEdUMU5HU25WV2JVWlRUVEpvZWxVeFZtdGpNREZHWWtWb1UySnVRbk5XYm5CWFkxWnNWbUZGZEd0aVZYQXdWREZTUjJGck1YVmFla1pVVmxkb1ZGcEhkSE5UUmtwMVZHMXNVMlZ0ZERaVk1WWnZWREpHZEZSdVVtbFRSMUp5VlRCVmVHSnNjRVphUnpscFVsZDRTVlF4YUd0aGJFbzJZa1JXWVZKWGFGaGFSbVJIVjFaV2NWWnJjRlJTYTI5NVZURldhMVV5U2toVGEyaFRZV3hhUzFVd1ZuZGpNV1JYV2taT1QxWnRhRXBWTWpGUFlWZEtTVm96WkdGU1JYQjZXa1phZDFORk9WVlVhekZwWVhwV2VsZHJWbUZWTWs1SVUyeG9WMkpzY0hKV01GcEhaR3hPVmxwSVpGWmlWa3BaVm0wMWMySkdWalpXYWxaWVlrZFNTRmxVU2xkV1JrWlpVV3hDVGxkSFp6RldNRlpxVFZacmVWUnVUbXhUUmxwMFZsUkNTMk14YkhKaFJUbHBVbGQ0U2xwRlpFOWhiVXBKWVVSR1dGSlhhRXhYVkVwTFl6SldSVkZyTVd4V1IyaDFWbTE0YjFReVNrWmlSV3hXWWxSc2FGWlVRa3RrYkdSWFdYcEdhRTFzV2xWVlZ6RTBZVEpLVjFkcVJtRlNWVFZFV1ZkNGMxZEhWa2xVYkhCcFZsWndlRmRXVWtkT1IxWlhZVVZvVDFZd05YSlZha1pMVFd4a1ZWUnNaR3RTYmtKWlZHeFNRMVJYU2xaWGJrcFlZVEZhV0ZSWGVIZFhSVFZWVVd4V1UwMXVaekpYYTFaclZqSlNWMk5HYkZSV2VteExWVzAxYTJOR1ZuSldWRlpWWWtWV05WUXhhRmRoTVVsNFYycEdZVkpXV1RCYVIzaHpWMFpXZEdWSFJsTmliVkozVmtWV1QxRXlSblJUV0d4T1YwZFNjRlZxUmxwa01XUnpXa1pLWVUxSVVsWmFSV1JQWVcxS1NXRkVSbGhTVjJoTVYxUktTMk15VmtWUmF6RnNWa2RvZFZaV1drOVJNa3BYWWtab2JGTkZOV0ZaYkZaaFkxWnNXV0pGVGs1U01HOHhWVmR3VDJGR1dqWldia3BhWVdzMWNWcEdaRXBsVlRWWlZHMXNUbUV4Y0hsV1JWWlBVVEF4U0ZKcmFGTmhhMHBMVlRCa1UyUXhiSEphUkU1aFRWZDRXVnBWVWs5WGJHUklaVVJhVkZaWGFISmFSekZQWkVkU1NGUnRjR2xUUjJkNFZqQldiMVV3TUhsU2JHaFBWak5TY0ZSVVNrOU5WbVJYV2taT2FFMVZjRnBXTWpFMFlWZEtjMU5yTlZwV2JXaFFWRlZhZDFkRk5WaGxSM0JvVmpKU2RWWXdWazlUTWsxNVUxaHNVMkpZVWxwVlZFSnpaV3hPVmxwRk9XdGlWWEJhVlZjMVQxbFdaRWRUYms1WVlUQTFRMWt3VlRSbFIxWkpZa1pzVTJWc1ZURldNRlp2VXpGcmVWTnVUbXhUUjNoYVZXNXdWazVXVGxaVWJrcFBUVmRvU2xVeU1VOWhWMFpXWTBkMFlXSkZWVFZWUmxvMFpGVnNjMDFVYkdOaWFVcGtabEU5UFZ4dUlsMTlcbiJdfQ==
