define(["../var/document","../var/support"],function(e,t){"use strict";return function(){var n=e.createDocumentFragment(),c=n.appendChild(e.createElement("div")),a=e.createElement("input");a.setAttribute("type","radio"),a.setAttribute("checked","checked"),a.setAttribute("name","t"),c.appendChild(a),t.checkClone=c.cloneNode(!0).cloneNode(!0).lastChild.checked,c.innerHTML="<textarea>x</textarea>",t.noCloneChecked=!!c.cloneNode(!0).lastChild.defaultValue}(),t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
