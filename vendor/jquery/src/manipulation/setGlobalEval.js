define(["../data/var/dataPriv"],function(a){"use strict";function t(t,e){for(var l=0,n=t.length;l<n;l++)a.set(t[l],"globalEval",!e||a.get(e[l],"globalEval"))}return t});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
