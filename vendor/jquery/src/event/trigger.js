define(["../core","../var/document","../data/var/dataPriv","../data/var/acceptData","../var/hasOwn","../event"],function(e,t,n,r,a){"use strict";var i=/^(?:focusinfocus|focusoutblur)$/;return e.extend(e.event,{trigger:function(p,o,u,l){var s,d,g,c,f,v,y,w=[u||t],m=a.call(p,"type")?p.type:p,h=a.call(p,"namespace")?p.namespace.split("."):[];if(d=g=u=u||t,3!==u.nodeType&&8!==u.nodeType&&!i.test(m+e.event.triggered)&&(m.indexOf(".")>-1&&(h=m.split("."),m=h.shift(),h.sort()),f=m.indexOf(":")<0&&"on"+m,p=p[e.expando]?p:new e.Event(m,"object"==typeof p&&p),p.isTrigger=l?2:3,p.namespace=h.join("."),p.rnamespace=p.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,p.result=void 0,p.target||(p.target=u),o=null==o?[p]:e.makeArray(o,[p]),y=e.event.special[m]||{},l||!y.trigger||y.trigger.apply(u,o)!==!1)){if(!l&&!y.noBubble&&!e.isWindow(u)){for(c=y.delegateType||m,i.test(c+m)||(d=d.parentNode);d;d=d.parentNode)w.push(d),g=d;g===(u.ownerDocument||t)&&w.push(g.defaultView||g.parentWindow||window)}for(s=0;(d=w[s++])&&!p.isPropagationStopped();)p.type=s>1?c:y.bindType||m,v=(n.get(d,"events")||{})[p.type]&&n.get(d,"handle"),v&&v.apply(d,o),v=f&&d[f],v&&v.apply&&r(d)&&(p.result=v.apply(d,o),p.result===!1&&p.preventDefault());return p.type=m,l||p.isDefaultPrevented()||y._default&&y._default.apply(w.pop(),o)!==!1||!r(u)||f&&e.isFunction(u[m])&&!e.isWindow(u)&&(g=u[f],g&&(u[f]=null),e.event.triggered=m,u[m](),e.event.triggered=void 0,g&&(u[f]=g)),p.result}},simulate:function(t,n,r){var a=e.extend(new e.Event,r,{type:t,isSimulated:!0});e.event.trigger(a,null,n)}}),e.fn.extend({trigger:function(t,n){return this.each(function(){e.event.trigger(t,n,this)})},triggerHandler:function(t,n){var r=this[0];if(r)return e.event.trigger(t,n,r,!0)}}),e});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
