(function(){describe("WOW",function(){var e,t;return window.console={warn:function(){}},e=100,t=300,describe("smoke test",function(){return it("exists",function(){return expect(WOW).toBeDefined()}),it("has an 'init' method",function(){return expect((new WOW).init).toBeDefined()})}),describe("simple test environment",function(){return beforeEach(function(){return loadFixtures("simple.html")}),it("emulates window height",function(){return expect(document.documentElement.clientHeight).toBe(t)}),it("has boxes set up for testing",function(){var e,t,o,i;return t=200,e=$("#simple").children().length,expect($("#simple").height()).toBe(t*e),expect($("#simple-1").height()).toBe(t),expect($("#simple-2").height()).toBe(t),expect($("#simple-3").height()).toBe(t),expect($("#simple-4").height()).toBe(t),expect($("#simple-5").height()).toBe(t),o=$("#simple").offset().top,expect($("#simple-1").offset().top).toBe(o+0*t),expect($("#simple-2").offset().top).toBe(o+1*t),expect($("#simple-3").offset().top).toBe(o+2*t),expect($("#simple-4").offset().top).toBe(o+3*t),expect($("#simple-5").offset().top).toBe(o+4*t),i=$("#simple-5")[0].style,expect(i.background).toBe("yellow"),expect(i.color).toBe("red")})}),describe("library behaviour",function(){var o;return o=null,beforeEach(function(t){return loadFixtures("simple.html"),(o=new WOW).init(),setTimeout(function(){return t()},e)}),it("animates elements that are fully visible on the page",function(){return expect($("#simple-1")).toHaveClass("animated"),expect($("#simple-1").css("visibility")).toBe("visible")}),it("does not touch elements that don't have the marker class",function(){return expect($("#simple-2")).not.toHaveClass("animated"),expect($("#simple-2").css("visibility")).toBe("visible")}),it("does not animate elements not yet visible on the page",function(){return expect($("#simple-3")).not.toHaveClass("animated"),expect($("#simple-3").css("visibility")).not.toBe("visible"),expect($("#simple-4")).not.toHaveClass("animated"),expect($("#simple-4").css("visibility")).not.toBe("visible")}),it("animates elements after scrolling down and they become visible",function(o){return window.scrollTo(0,$("#simple-3").offset().top-t+150),setTimeout(function(){return expect($("#simple-3")).toHaveClass("animated"),expect($("#simple-3").css("visibility")).toBe("visible"),expect($("#simple-4")).not.toHaveClass("animated"),expect($("#simple-4").css("visibility")).not.toBe("visible"),window.scrollTo(0,$("#simple-4").offset().top-t+150),setTimeout(function(){return expect($("#simple-4")).toHaveClass("animated"),expect($("#simple-4").css("visibility")).toBe("visible"),o()},e)},e)}),it("does not tamper with the style attribute",function(o){return window.scrollTo(0,$("#simple-5").offset().top-t+150),setTimeout(function(){return expect($("#simple-5")).toHaveClass("animated"),expect($("#simple-5").css("visibility")).toBe("visible"),expect($("#simple-5")[0].style.background).toBe("yellow"),expect($("#simple-5")[0].style.color).toBe("red"),o()},e)}),it("works with asynchronously loaded content",function(i){return $("#simple").append($("<div/>",{id:"simple-6",class:"wow"})),o.sync(),window.scrollTo(0,$("#simple-6").offset().top-t+150),setTimeout(function(){return expect($("#simple-6")).toHaveClass("animated"),expect($("#simple-6").css("visibility")).toBe("visible"),i()},e)}),it("works with asynchronously loaded nested content",function(i){return $("#simple").append($("<div/>")).children().first().append($("<div/>",{id:"simple-7",class:"wow"})),o.sync(),window.scrollTo(0,$("#simple-7").offset().top-t+150),setTimeout(function(){return expect($("#simple-7")).toHaveClass("animated"),expect($("#simple-7").css("visibility")).toBe("visible"),i()},e)})}),describe("custom test environment",function(){return beforeEach(function(){return loadFixtures("custom.html")}),it("emulates window height",function(){return expect(document.documentElement.clientHeight).toBe(t)}),it("has boxes set up for testing",function(){var e;return expect($("#custom").height()).toBe(800),expect($("#custom-1").height()).toBe(200),expect($("#custom-2").height()).toBe(200),expect($("#custom-3").height()).toBe(200),expect($("#custom-4").height()).toBe(200),e=$("#custom").offset().top,expect($("#custom-1").offset().top).toBe(e+0),expect($("#custom-2").offset().top).toBe(e+200),expect($("#custom-3").offset().top).toBe(e+400),expect($("#custom-4").offset().top).toBe(e+600)})}),describe("library behaviour with custom settings",function(){var o;return o=!1,beforeEach(function(t){return o=!1,loadFixtures("custom.html"),new WOW({boxClass:"block",animateClass:"fancy",offset:10,callback:function(){return o=!0}}).init(),$(".block").on("block",function(){return $(this).addClass("triggered")}),setTimeout(function(){return t()},e)}),it("creates two instances of the WOW.js with different configs",function(){var e,t;return e=new WOW({boxClass:"block1",animateClass:"fancy1",offset:10}),t=new WOW({boxClass:"block2",animateClass:"fancy2",offset:20}),expect(e.config.boxClass).toBe("block1"),expect(e.config.animateClass).toBe("fancy1"),expect(e.config.offset).toBe(10)}),it("does not touch elements that don't have the marker class",function(o){return window.scrollTo(0,$("#custom-1").offset().top-t+15),setTimeout(function(){return expect($("#custom-1")).not.toHaveClass("fancy"),o()},e)}),it("animates elements that are partially visible on the page based on the 'offset' config",function(o){return setTimeout(function(){return window.scrollTo(0,$("#custom-2").offset().top-t+5),expect($("#custom-2")).not.toHaveClass("fancy"),window.scrollTo(0,$("#custom-2").offset().top-t+15),setTimeout(function(){return expect($("#custom-2")).toHaveClass("fancy"),expect($("#custom-2").css("visibility")).toBe("visible"),o()},e)},e)}),it("does not animate elements not yet visible on the page",function(){return expect($("#custom-3")).not.toHaveClass("fancy"),expect($("#custom-4")).not.toHaveClass("fancy")}),it("animates elements after scrolling down and they become visible",function(o){return window.scrollTo(0,$("#custom-3").offset().top-t+150),setTimeout(function(){return expect($("#custom-3")).toHaveClass("fancy"),expect($("#custom-3").css("visibility")).toBe("visible"),expect($("#custom-3")[0].style.webkitAnimationIterationCount).toBe("2"),expect($("#custom-4")).not.toHaveClass("fancy"),window.scrollTo(0,$("#custom-4").offset().top-t+150),setTimeout(function(){return expect($("#custom-4")).toHaveClass("fancy"),expect($("#custom-4").css("visibility")).toBe("visible"),expect($("#custom-4")[0].style.webkitAnimationIterationCount).toBe("infinite"),expect($("#custom-4")[0].style.webkitAnimationDuration).toBe("2s"),expect($("#custom-4")[0].style.webkitAnimationDelay).toBe("1s"),o()},e)},e)}),it("fires the callback",function(i){return o=!1,window.scrollTo(0,$("#custom-3").offset().top-t+150),setTimeout(function(){return expect(o).toBe(!0),i()},e)}),it("fires the callback on the visible element",function(o){return window.scrollTo(0,$("#custom-3").offset().top-t+150),setTimeout(function(){return expect($("#custom-3")).toHaveClass("triggered"),expect($("#custom-4")).not.toHaveClass("triggered"),window.scrollTo(0,$("#custom-4").offset().top-t+150),setTimeout(function(){return expect($("#custom-3")).toHaveClass("triggered"),expect($("#custom-4")).toHaveClass("triggered"),o()},e)},e)})})})}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
